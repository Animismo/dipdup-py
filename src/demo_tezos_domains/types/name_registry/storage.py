# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, List, Union

from pydantic import BaseModel, Extra


class Actions(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class Datum(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ExpiryMapItem(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Metadatum(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Record(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ReverseRecord(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Tzip12Token(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Store(BaseModel):
    data: Union[int, Datum]
    expiry_map: Union[int, ExpiryMapItem]
    metadata: Union[int, Metadatum]
    next_tzip12_token_id: str
    owner: str
    records: Union[int, Record]
    reverse_records: Union[int, ReverseRecord]
    tzip12_tokens: Union[int, Tzip12Token]


class Storage(BaseModel):
    actions: Dict[str, Actions]
    store: Store
    trusted_senders: List[str]
