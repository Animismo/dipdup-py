# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, List, Union

from pydantic import BaseModel, Extra


class Actions(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class Auction(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class BidderBalance(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Commitment(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Config(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class Datum(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Metadatum(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Record(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Store(BaseModel):
    auctions: Union[int, Auction]
    bidder_balances: Union[int, BidderBalance]
    commitments: Union[int, Commitment]
    config: Dict[str, Config]
    data: Union[int, Datum]
    metadata: Union[int, Metadatum]
    name_registry: str
    owner: str
    records: Union[int, Record]
    tld: str


class Storage(BaseModel):
    actions: Dict[str, Actions]
    store: Store
    trusted_senders: List[str]
